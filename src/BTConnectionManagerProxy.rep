//   Copyright 2019 Dan Leinir Turthra Jensen <admin@leinir.dk>
//
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU Library General Public License as
//   published by the Free Software Foundation; either version 3, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU Library General Public License for more details
//
//   You should have received a copy of the GNU Library General Public License
//   along with this program; if not, see <https://www.gnu.org/licenses/>

class BTConnectionManagerProxy {
    PROP(bool isConnected READONLY)
    PROP(int batteryLevel READONLY)
    PROP(bool discoveryRunning READONLY)
    PROP(int deviceCount READONLY)
    PROP(int commandQueueCount READONLY)
    PROP(QString tailVersion READONLY)
    PROP(int bluetoothState READONLY)

    SLOT(void runCommand(const QString& command))
    SLOT(void startDiscovery())
    SLOT(void stopDiscovery())
    SLOT(void sendMessage(const QString &message))
    SLOT(void connectToDevice(const QString& deviceID))
    SLOT(void disconnectDevice())
    SLOT(void setFakeTailMode(bool enableFakery))
    SLOT(void setDeviceName(const QString& deviceID, const QString& deviceName))

    // Designed to fill up a map with information, based on the command found in the QVariantMap key "command"'s value
    PROP(QVariantMap command)
    SLOT(QVariantMap getCommand(const QString& command))

    SIGNAL(messageReceived(const QString &sender, const QString &message))
    SIGNAL(message(const QString& message))
};
